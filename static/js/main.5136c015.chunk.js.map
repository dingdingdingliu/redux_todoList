{"version":3,"sources":["constants/globalStyle.js","components/button/Button.js","redux/actionTypes.js","redux/actions.js","constants/filtersConstant.js","components/header/Header.js","redux/selector.js","components/addTodo/AddTodo.js","hooks/useInput.js","components/mainTodoList/TodoItem.js","components/mainTodoList/MainTodoList.js","components/themeButton/ThemeButton.js","App.js","redux/reducer/todoItems.js","redux/reducer/filter.js","theme/theme.js","redux/reducer/index.js","redux/reducer/colorTheme.js","app/store.js","serviceWorker.js","index.js"],"names":["GlobalStyle","createGlobalStyle","LargeButtonStyle","styled","button","props","theme","colors","background","font","border","SmallButtonStyle","ADD_TODO","DELETE_TODO","TOGGLE_TODO","DELETE_ALL","SET_FILTER","TOGGLE_THEME","setFilter","filter","type","payload","FILTERS","ALL","DONE","UNDONE","HeaderDiv","div","TitleWrapper","p","span","SmallTitle","spFont","DeleteAllButtonStyle","ShowAllButtonStyle","ShowDoneButtonStyle","done","ShowUndoneButtonStyle","undone","Title","Header","dispatch","useDispatch","onClick","todoItemsSelector","store","todoListState","todoItemsState","todoItems","showTodoList","allTodoItems","filterState","filtersSelector","item","isDone","colorThemeSelector","themeState","AddTodoDiv","AddInputStyle","input","AddInput","placeholder","value","onChange","onKeyPress","AddItemButton","className","children","AddTodo","useState","setValue","handleInputChange","e","target","useInput","useSelector","useEffect","todoItemList","localList","window","localStorage","setItem","JSON","stringify","setItemIntoLocalStorage","handleAddTodo","useCallback","trim","handleKeyPress","key","TodoDiv","ButtonDiv","DoneButtonStyle","DeleteButtonStyle","delete","TodoItemStyle","TodoContent","content","TodoItem","todo","handleToggle","handleDelete","id","MainTodoList","map","ThemeButtonStyle","ThemeButton","AppDiv","ThemeButtonDiv","App","listInLocalStorage","parse","getItem","todoId","length","initialState","initialFilter","state","action","lightTheme","darkTheme","combineReducers","configureStore","reducer","todoItemsReducer","Boolean","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.5136c015.chunk.js","sourcesContent":["import { createGlobalStyle } from 'styled-components'\r\n\r\nconst GlobalStyle = createGlobalStyle`\r\n *{\r\n   box-sizing: border-box;\r\n   margin: 0;\r\n   padding: 0;\r\n   list-style: none;\r\n   line-height: 1.5em;\r\n   text-decoration: none;\r\n }\r\n`\r\nexport default GlobalStyle\r\n","import styled from 'styled-components'\r\n\r\nconst LargeButtonStyle = styled.button`\r\n  padding: 8px 16px;\r\n  font-size: 20px;\r\n  background: ${(props) => props.theme.colors.background};\r\n  color: ${(props) => props.theme.colors.font};\r\n  border: 2px solid ${(props) => props.theme.colors.border};\r\n  border-radius: 5px;\r\n\r\n  :hover {\r\n    cursor: pointer;\r\n    transform: scale(1.05);\r\n  }\r\n`\r\n\r\nconst SmallButtonStyle = styled.button`\r\n  padding: 6px 10px;\r\n  font-size: 14px;\r\n  background: ${(props) => props.theme.colors.background};\r\n  border-radius: 5px;\r\n\r\n  :hover {\r\n    cursor: pointer;\r\n    transform: scale(1.05);\r\n  }\r\n`\r\n\r\nexport { LargeButtonStyle, SmallButtonStyle }\r\n","export const ADD_TODO = 'add_todo'\r\nexport const DELETE_TODO = 'delete_todo'\r\nexport const TOGGLE_TODO = 'toggle_todo'\r\nexport const DELETE_ALL = 'delete_allTodos'\r\nexport const SET_FILTER = 'set_filter'\r\nexport const TOGGLE_THEME = 'toggle_theme'\r\n","import {\r\n  ADD_TODO,\r\n  DELETE_TODO,\r\n  TOGGLE_TODO,\r\n  DELETE_ALL,\r\n  SET_FILTER,\r\n  TOGGLE_THEME\r\n} from './actionTypes'\r\n\r\nexport function addTodo(item) {\r\n  return {\r\n    type: ADD_TODO,\r\n    payload: {\r\n      item\r\n    }\r\n  }\r\n}\r\n\r\nexport function deleteTodo(id) {\r\n  return {\r\n    type: DELETE_TODO,\r\n    payload: {\r\n      id\r\n    }\r\n  }\r\n}\r\n\r\nexport function toggleTodo(id) {\r\n  return {\r\n    type: TOGGLE_TODO,\r\n    payload: {\r\n      id\r\n    }\r\n  }\r\n}\r\n\r\nexport function deleteAllTodos() {\r\n  return {\r\n    type: DELETE_ALL\r\n  }\r\n}\r\n\r\nexport function setFilter(filter) {\r\n  return {\r\n    type: SET_FILTER,\r\n    payload: {\r\n      filter\r\n    }\r\n  }\r\n}\r\n\r\nexport function toggleTheme() {\r\n  return {\r\n    type: TOGGLE_THEME\r\n  }\r\n}\r\n","const FILTERS = {\r\n  ALL: 'all',\r\n  DONE: 'done',\r\n  UNDONE: 'undone'\r\n}\r\n\r\nexport default FILTERS\r\n","import styled from 'styled-components'\r\nimport { SmallButtonStyle } from '../button/Button'\r\nimport { setFilter, deleteAllTodos } from '../../redux/actions'\r\nimport { useDispatch } from 'react-redux'\r\nimport FILTERS from '../../constants/filtersConstant'\r\n\r\nconst HeaderDiv = styled.div`\r\n  text-align: center;\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  margin: 80px 0px 10px 0px;\r\n`\r\nconst TitleWrapper = styled.p`\r\n  font-size: 56px;\r\n  font-weight: bold;\r\n  color: ${(props) => props.theme.colors.font};\r\n  text-align: center;\r\n  border: 2px solid ${(props) => props.theme.colors.border};\r\n  border-radius: 5px;\r\n  padding: 10px 20px;\r\n  margin-bottom: 10px;\r\n\r\n  span {\r\n    color: ${(props) => props.theme.colors.span};\r\n  }\r\n`\r\nconst SmallTitle = styled(TitleWrapper)`\r\n  color: ${(props) => props.theme.colors.spFont};\r\n  font-size: 20px;\r\n  border: none;\r\n  margin-bottom: 20px;\r\n`\r\n\r\nconst DeleteAllButtonStyle = styled(SmallButtonStyle)`\r\n  color: ${(props) => props.theme.colors.font};\r\n  border: 2px solid ${(props) => props.theme.colors.border};\r\n  margin-left: 8px;\r\n`\r\nconst ShowAllButtonStyle = styled(SmallButtonStyle)`\r\n  color: ${(props) => props.theme.colors.font};\r\n  border: 2px solid ${(props) => props.theme.colors.border};\r\n`\r\n\r\nconst ShowDoneButtonStyle = styled(SmallButtonStyle)`\r\n  color: ${(props) => props.theme.colors.done};\r\n  border: 2px solid ${(props) => props.theme.colors.done};\r\n  margin-left: 8px;\r\n`\r\n\r\nconst ShowUndoneButtonStyle = styled(SmallButtonStyle)`\r\n  color: ${(props) => props.theme.colors.undone};\r\n  border: 2px solid ${(props) => props.theme.colors.undone};\r\n  margin-left: 8px;\r\n`\r\n\r\nfunction Title() {\r\n  return (\r\n    <TitleWrapper>\r\n      Hello<span>!</span> Todo\r\n    </TitleWrapper>\r\n  )\r\n}\r\n\r\nexport default function Header() {\r\n  const dispatch = useDispatch()\r\n  return (\r\n    <HeaderDiv>\r\n      <Title />\r\n      <SmallTitle>So glad to see you here to list your Todo.</SmallTitle>\r\n      <div>\r\n        <ShowAllButtonStyle onClick={() => dispatch(setFilter(FILTERS.ALL))}>\r\n          Show All\r\n        </ShowAllButtonStyle>\r\n        <ShowUndoneButtonStyle\r\n          onClick={() => dispatch(setFilter(FILTERS.UNDONE))}\r\n        >\r\n          Show Undone\r\n        </ShowUndoneButtonStyle>\r\n        <ShowDoneButtonStyle onClick={() => dispatch(setFilter(FILTERS.DONE))}>\r\n          Show Done\r\n        </ShowDoneButtonStyle>\r\n        <DeleteAllButtonStyle\r\n          onClick={() => {\r\n            dispatch(deleteAllTodos())\r\n          }}\r\n        >\r\n          Delete All\r\n        </DeleteAllButtonStyle>\r\n      </div>\r\n    </HeaderDiv>\r\n  )\r\n}\r\n","import FILTERS from '../constants/filtersConstant'\r\n\r\nexport const todoItemsSelector = (store) =>\r\n  store.todoListState.todoItemsState.todoItems\r\n\r\nconst filtersSelector = (store) => store.todoListState.filterState\r\n\r\nexport const showTodoList = (store) => {\r\n  const allTodoItems = todoItemsSelector(store)\r\n  const filter = filtersSelector(store)\r\n  switch (filter) {\r\n    case FILTERS.ALL:\r\n      return allTodoItems\r\n    case FILTERS.DONE:\r\n      return allTodoItems.filter((item) => item.isDone === true)\r\n    case FILTERS.UNDONE:\r\n      return allTodoItems.filter((item) => item.isDone === false)\r\n    default:\r\n      return allTodoItems\r\n  }\r\n}\r\n\r\nexport const colorThemeSelector = (store) => store.todoListState.themeState\r\n","import styled from 'styled-components'\r\nimport { useCallback, useEffect } from 'react'\r\nimport { useDispatch } from 'react-redux'\r\nimport { LargeButtonStyle } from '../button/Button'\r\nimport useInput from '../../hooks/useInput'\r\nimport { addTodo } from '../../redux/actions'\r\nimport { useSelector } from 'react-redux'\r\nimport { todoItemsSelector } from '../../redux/selector'\r\n\r\nconst AddTodoDiv = styled.div`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  padding: 10px;\r\n`\r\n\r\nconst AddInputStyle = styled.input`\r\n  padding: 10px;\r\n  margin-right: 10px;\r\n  border-radius: 5px;\r\n  outline: none;\r\n  border: 1px solid ${(props) => props.theme.colors.border};\r\n`\r\n\r\nfunction AddInput({ type, placeholder, value, onChange, onKeyPress }) {\r\n  return (\r\n    <AddInputStyle\r\n      type={type}\r\n      placeholder={placeholder}\r\n      value={value}\r\n      onChange={onChange}\r\n      onKeyPress={onKeyPress}\r\n    ></AddInputStyle>\r\n  )\r\n}\r\n\r\nfunction AddItemButton({ className, onClick, children }) {\r\n  return (\r\n    <LargeButtonStyle className={className} onClick={onClick}>\r\n      {children}\r\n    </LargeButtonStyle>\r\n  )\r\n}\r\n\r\nexport default function AddTodo() {\r\n  const dispatch = useDispatch()\r\n  const { value, setValue, handleInputChange } = useInput()\r\n  const todoItemsState = useSelector(todoItemsSelector)\r\n\r\n  function setItemIntoLocalStorage(todoItemList) {\r\n    const localList = { todoItems: todoItemList }\r\n    window.localStorage.setItem('todoItems', JSON.stringify(localList))\r\n  }\r\n\r\n  useEffect(() => {\r\n    setItemIntoLocalStorage(todoItemsState)\r\n  }, [todoItemsState])\r\n\r\n  const handleAddTodo = useCallback(() => {\r\n    if (!value.trim('')) return setValue('')\r\n    dispatch(addTodo(value))\r\n    setValue('')\r\n  }, [dispatch, value, setValue])\r\n\r\n  const handleKeyPress = useCallback(\r\n    (e) => {\r\n      if (e.key === 'Enter') handleAddTodo()\r\n    },\r\n    [handleAddTodo]\r\n  )\r\n\r\n  return (\r\n    <AddTodoDiv>\r\n      <AddInput\r\n        type='text'\r\n        placeholder='Your Todo'\r\n        value={value}\r\n        onChange={handleInputChange}\r\n        onKeyPress={handleKeyPress}\r\n      />\r\n      <AddItemButton onClick={handleAddTodo}>Add Todo</AddItemButton>\r\n    </AddTodoDiv>\r\n  )\r\n}\r\n","import { useState } from 'react'\r\n\r\nexport default function useInput() {\r\n  const [value, setValue] = useState('')\r\n\r\n  const handleInputChange = (e) => {\r\n    setValue((value) => e.target.value)\r\n  }\r\n\r\n  return { value, setValue, handleInputChange }\r\n}\r\n","import styled from 'styled-components'\r\nimport { SmallButtonStyle } from '../button/Button'\r\n\r\nconst TodoDiv = styled.div`\r\n  margin: 10px auto;\r\n  width: 70vh;\r\n  display: flex;\r\n  flex-direction: row;\r\n  justify-content: space-between;\r\n  padding: 10px 20px;\r\n`\r\n\r\nconst ButtonDiv = styled.div`\r\n  margin-left: 8px;\r\n`\r\n\r\nconst DoneButtonStyle = styled(SmallButtonStyle)`\r\n  color: ${(props) => props.theme.colors.undone};\r\n  border: 2px solid ${(props) => props.theme.colors.undone};\r\n  border-radius: 5px;\r\n\r\n  ${(props) =>\r\n    props.isDone &&\r\n    `\r\n    color: green;\r\n    border: 2px solid green;\r\n  `}\r\n`\r\n\r\nconst DeleteButtonStyle = styled(SmallButtonStyle)`\r\n  color: ${(props) => props.theme.colors.delete};\r\n  border: 2px solid ${(props) => props.theme.colors.delete};\r\n  border-radius: 5px;\r\n  margin-left: 8px;\r\n`\r\n\r\nconst TodoItemStyle = styled.div`\r\n  max-width: 50%;\r\n  background: ${(props) => props.theme.colors.font};\r\n  border-radius: 5px;\r\n  color: ${(props) => props.theme.colors.background};\r\n  font-size: 14px;\r\n  padding: 6px 10px 4px 10px;\r\n\r\n  ${(props) =>\r\n    props.isDone &&\r\n    `\r\n    text-decoration: line-through;\r\n  `}\r\n`\r\nfunction TodoContent({ content, isDone }) {\r\n  return <TodoItemStyle isDone={isDone}>{content}</TodoItemStyle>\r\n}\r\n\r\nexport function TodoItem({ todo, handleToggle, handleDelete }) {\r\n  const handleToggleClick = () => {\r\n    handleToggle(todo.id)\r\n  }\r\n\r\n  const handleDeleteClick = () => {\r\n    handleDelete(todo.id)\r\n  }\r\n\r\n  return (\r\n    <TodoDiv data-id={todo.id}>\r\n      <TodoContent content={todo.content} isDone={todo.isDone} />\r\n      <ButtonDiv>\r\n        <DoneButtonStyle isDone={todo.isDone} onClick={handleToggleClick}>\r\n          {todo.isDone ? '已完成' : '未完成'}\r\n        </DoneButtonStyle>\r\n        <DeleteButtonStyle onClick={handleDeleteClick}>刪除</DeleteButtonStyle>\r\n      </ButtonDiv>\r\n    </TodoDiv>\r\n  )\r\n}\r\n","import AddTodoComponent from '../addTodo'\r\nimport { toggleTodo, deleteTodo } from '../../redux/actions'\r\nimport { TodoItem } from './TodoItem'\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport { showTodoList } from '../../redux/selector'\r\n\r\nexport default function MainTodoList() {\r\n  const todoItemsState = useSelector(showTodoList)\r\n  const dispatch = useDispatch()\r\n\r\n  return (\r\n    <div>\r\n      <AddTodoComponent />\r\n      {todoItemsState.map((todo) => (\r\n        <TodoItem\r\n          key={todo.id}\r\n          todo={todo}\r\n          handleToggle={() => dispatch(toggleTodo(todo.id))}\r\n          handleDelete={() => dispatch(deleteTodo(todo.id))}\r\n        />\r\n      ))}\r\n    </div>\r\n  )\r\n}\r\n","import styled from 'styled-components'\r\nimport { SmallButtonStyle } from '../button/Button'\r\nimport { useDispatch } from 'react-redux'\r\nimport { toggleTheme } from '../../redux/actions'\r\n\r\nconst ThemeButtonStyle = styled(SmallButtonStyle)`\r\n  color: ${(props) => props.theme.colors.font};\r\n  border: 2px solid ${(props) => props.theme.colors.border};\r\n  border-radius: 5px;\r\n  margin-left: 8px;\r\n`\r\n\r\nexport default function ThemeButton() {\r\n  const dispatch = useDispatch()\r\n  return (\r\n    <ThemeButtonStyle\r\n      onClick={() => {\r\n        dispatch(toggleTheme())\r\n      }}\r\n    >\r\n      Color Mode\r\n    </ThemeButtonStyle>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport styled, { ThemeProvider } from 'styled-components'\r\nimport GlobalStyle from './constants/globalStyle'\r\nimport Header from './components/header'\r\nimport MainTodoList from './components/mainTodoList'\r\nimport ThemeButton from './components/themeButton'\r\nimport { useSelector } from 'react-redux'\r\nimport { colorThemeSelector } from './redux/selector'\r\n\r\nconst AppDiv = styled.div`\r\n  min-height: 100vh;\r\n  background-color: ${(props) => props.theme.colors.background};\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n`\r\nconst ThemeButtonDiv = styled.div`\r\n  position: absolute;\r\n  top: 10%;\r\n  left: 90%;\r\n`\r\n\r\nfunction App() {\r\n  const theme = useSelector(colorThemeSelector)\r\n\r\n  return (\r\n    <ThemeProvider theme={theme}>\r\n      <GlobalStyle />\r\n      <AppDiv>\r\n        <ThemeButtonDiv>\r\n          <ThemeButton />\r\n        </ThemeButtonDiv>\r\n        <Header />\r\n        <MainTodoList />\r\n      </AppDiv>\r\n    </ThemeProvider>\r\n  )\r\n}\r\n\r\nexport default App\r\n","import { ADD_TODO, DELETE_TODO, TOGGLE_TODO, DELETE_ALL } from '../actionTypes'\r\nconst listInLocalStorage = JSON.parse(getItemFromLocalStorage())\r\nlet todoId =\r\n  listInLocalStorage && listInLocalStorage.length > 0\r\n    ? listInLocalStorage.todoItems[0].id + 1\r\n    : 3\r\n\r\nconst initialState = {\r\n  todoItems: [\r\n    {\r\n      id: 2,\r\n      content: '聽蛋堡',\r\n      isDone: true\r\n    },\r\n    {\r\n      id: 1,\r\n      content: '看星星',\r\n      isDone: false\r\n    }\r\n  ]\r\n}\r\n\r\nfunction getItemFromLocalStorage() {\r\n  return window.localStorage.getItem('todoItems')\r\n}\r\n\r\nexport default function todoItemsReducer(\r\n  state = listInLocalStorage || initialState,\r\n  action\r\n) {\r\n  // eslint-disable-next-line default-case\r\n  switch (action.type) {\r\n    case ADD_TODO: {\r\n      return {\r\n        todoItems: [\r\n          ...state.todoItems,\r\n          {\r\n            id: todoId++,\r\n            content: action.payload.item,\r\n            isDone: false\r\n          }\r\n        ]\r\n      }\r\n    }\r\n\r\n    case DELETE_TODO: {\r\n      return {\r\n        todoItems: state.todoItems.filter(\r\n          (item) => item.id !== action.payload.id\r\n        )\r\n      }\r\n    }\r\n\r\n    case TOGGLE_TODO: {\r\n      return {\r\n        todoItems: state.todoItems.map((item) => {\r\n          if (item.id !== action.payload.id) return item\r\n          return {\r\n            ...item,\r\n            isDone: !item.isDone\r\n          }\r\n        })\r\n      }\r\n    }\r\n\r\n    case DELETE_ALL: {\r\n      return {\r\n        todoItems: []\r\n      }\r\n    }\r\n\r\n    default: {\r\n      return state\r\n    }\r\n  }\r\n}\r\n","import { SET_FILTER } from '../actionTypes'\r\nimport FILTERS from '../../constants/filtersConstant'\r\n\r\nconst initialFilter = FILTERS.ALL\r\n\r\nconst filter = (state = initialFilter, action) => {\r\n  switch (action.type) {\r\n    case SET_FILTER: {\r\n      return action.payload.filter\r\n    }\r\n\r\n    default: {\r\n      return state\r\n    }\r\n  }\r\n}\r\n\r\nexport default filter\r\n","export const lightTheme = {\r\n  colors: {\r\n    background: '#FDFAF0',\r\n    font: '#808080',\r\n    span: '#FF9900',\r\n    spFont: '#00559A',\r\n    border: '#808080',\r\n    done: 'green',\r\n    undone: '#CD5C5C',\r\n    delete: '#808080',\r\n  },\r\n}\r\n\r\nexport const darkTheme = {\r\n  colors: {\r\n    background: '#282c34',\r\n    font: 'white',\r\n    span: 'yellow',\r\n    spFont: 'aqua',\r\n    border: 'silver',\r\n    done: 'green',\r\n    undone: '#F08080',\r\n    delete: '#D3D3D3',\r\n  },\r\n}\r\n","import { combineReducers } from 'redux'\r\nimport todoItems from './todoItems'\r\nimport filter from './filter'\r\nimport colorTheme from './colorTheme'\r\n\r\nexport default combineReducers({\r\n  todoItemsState: todoItems,\r\n  filterState: filter,\r\n  themeState: colorTheme\r\n})\r\n","import { lightTheme, darkTheme } from '../../theme/theme'\r\nimport { TOGGLE_THEME } from '../actionTypes'\r\n\r\nexport default function colorTheme(state = darkTheme, action) {\r\n  switch (action.type) {\r\n    case TOGGLE_THEME:\r\n      return (state = state === darkTheme ? lightTheme : darkTheme)\r\n\r\n    default:\r\n      return state\r\n  }\r\n}\r\n","import { configureStore } from '@reduxjs/toolkit'\r\nimport todoItemsReducer from '../redux/reducer'\r\n\r\nexport const store = configureStore({\r\n  reducer: {\r\n    todoListState: todoItemsReducer\r\n  }\r\n})\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then((registration) => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch((error) => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then((response) => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then((registration) => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then((registration) => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport App from './App'\r\nimport { store } from './app/store'\r\nimport { Provider } from 'react-redux'\r\nimport * as serviceWorker from './serviceWorker'\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <App />\r\n  </Provider>,\r\n  document.getElementById('root')\r\n)\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister()\r\n"],"sourceRoot":""}